import React, { useState, useCallback, useEffect } from 'react';
import { Search, TrendingUp, Users, Target, User, ChevronRight, Calendar, MapPin, Clock, ArrowLeft } from 'lucide-react';

// Tipos para os dados da API
interface Team {
  id: number;
  name: string;
  logo: string;
  country: string;
  code: string;
  founded: number;
  national: boolean;
}

interface League {
  id: number;
  name: string;
  country: string;
  logo: string;
  flag: string;
  season: number;
}

interface Fixture {
  fixture: {
    id: number;
    referee: string | null;
    timezone: string;
    date: string;
    timestamp: number;
    status: {
      long: string;
      short: string;
      elapsed: number | null;
    };
    venue: {
      id: number | null;
      name: string | null;
      city: string | null;
    };
  };
  league: League;
  teams: {
    home: Team;
    away: Team;
  };
  goals: {
    home: number | null;
    away: number | null;
  };
  score: {
    halftime: {
      home: number | null;
      away: number | null;
    };
    fulltime: {
      home: number | null;
      away: number | null;
    };
    extratime: {
      home: number | null;
      away: number | null;
    };
    penalty: {
      home: number | null;
      away: number | null;
    };
  };
}

interface TeamSearchResult {
  team: Team;
  venue: {
    id: number;
    name: string;
    address: string;
    city: string;
    capacity: number;
    surface: string;
    image: string;
  };
}

function App() {
  const [searchTerm, setSearchTerm] = useState('');
  const [teams, setTeams] = useState<TeamSearchResult[]>([]);
  const [selectedTeam, setSelectedTeam] = useState<Team | null>(null);
  const [fixtures, setFixtures] = useState<Fixture[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [showResults, setShowResults] = useState(false);
  const [searchStep, setSearchStep] = useState<'teams' | 'fixtures'>('teams');

  const API_KEY = 'd31b89f86f53e645e951db4a6af1a4d4';

  // Função de teste simples
  const testAPI = async () => {
    console.log('Testando API com Liverpool...');
    setLoading(true);
    
    try {
      const response = await fetch(
        'https://v3.football.api-sports.io/teams?search=Liverpool',
        {
          method: 'GET',
          headers: {
            'X-RapidAPI-Key': API_KEY,
            'X-RapidAPI-Host': 'v3.football.api-sports.io',
          }
        }
      );
      
      console.log('Response status:', response.status);
      
      const data = await response.json();
      console.log('Response data:', data);
      
      if (data.response && data.response.length > 0) {
        alert(`Time encontrado: ${data.response[0].team.name}`);
      }
    } catch (error) {
      console.error('Erro no teste:', error);
      alert(`Erro: ${error}`);
    } finally {
      setLoading(false);
    }
  };

  // Função para buscar times
  const searchTeams = useCallback(async (teamName: string) => {
    if (!teamName.trim() || teamName.length < 3) {
      setTeams([]);
      setShowResults(false);
      return;
    }

    setLoading(true);
    setError('');
    setSearchStep('teams');

    try {
      const response = await fetch(
        `https://v3.football.api-sports.io/teams?search=${encodeURIComponent(teamName)}`,
        {
          method: 'GET',
          headers: {
            'X-RapidAPI-Key': API_KEY,
            'X-RapidAPI-Host': 'v3.football.api-sports.io',
            'Content-Type': 'application/json'
          }
        }
      );

      console.log('Teams Response Status:', response.status);

      if (!response.ok) {
        throw new Error(`Erro HTTP: ${response.status}`);
      }

      const data = await response.json();
      console.log('Teams Data:', data);
      
      if (data.response && data.response.length > 0) {
        setTeams(data.response);
        setShowResults(true);
        setError('');
      } else {
        setTeams([]);
        setError('Nenhum time encontrado');
        setShowResults(true);
      }
    } catch (err) {
      console.error('Erro ao buscar times:', err);
      setError(`Erro ao buscar times: ${err instanceof Error ? err.message : 'Erro desconhecido'}`);
      setTeams([]);
      setShowResults(true);
    } finally {
      setLoading(false);
    }
  }, [API_KEY]);

  // Função para buscar próximos jogos de um time específico
  const searchTeamFixtures = useCallback(async (team: Team) => {
    setSelectedTeam(team);
    setLoading(true);
    setError('');
    setSearchStep('fixtures');

    try {
      // Buscar próximos jogos do time
      const response = await fetch(
        `https://v3.football.api-sports.io/fixtures?team=${team.id}&next=10`,
        {
          method: 'GET',
          headers: {
            'X-RapidAPI-Key': API_KEY,
            'X-RapidAPI-Host': 'v3.football.api-sports.io',
            'Content-Type': 'application/json'
          }
        }
      );

      console.log('Fixtures Response Status:', response.status);

      if (!response.ok) {
        throw new Error(`Erro HTTP: ${response.status}`);
      }

      const data = await response.json();
      console.log('Fixtures Data:', data);
      
      if (data.response && data.response.length > 0) {
        setFixtures(data.response);
        setError('');
      } else {
        setFixtures([]);
        setError('Nenhum jogo futuro encontrado para este time');
      }
    } catch (err) {
      console.error('Erro ao buscar jogos:', err);
      setError(`Erro ao buscar jogos: ${err instanceof Error ? err.message : 'Erro desconhecido'}`);
      setFixtures([]);
    } finally {
      setLoading(false);
    }
  }, [API_KEY]);

  // Debounce effect para buscar times
  useEffect(() => {
    if (!searchTerm.trim() || searchTerm.length < 3) {
      setTeams([]);
      setShowResults(false);
      setError('');
      return;
    }

    const timeoutId = setTimeout(() => {
      console.log('Iniciando busca de times para:', searchTerm);
      searchTeams(searchTerm).catch(console.error);
    }, 800);

    return () => clearTimeout(timeoutId);
  }, [searchTerm, searchTeams]);

  // Função para formatar data
  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('pt-BR', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  // Função para lidar com mudanças no input
  const handleSearchChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    setSearchTerm(value);
    setSelectedTeam(null);
    setFixtures([]);
    setSearchStep('teams');
    
    if (!value.trim()) {
      setTeams([]);
      setShowResults(false);
      setError('');
    }
  }, []);

  // Função para fechar resultados
  const handleClickOutside = useCallback(() => {
    setShowResults(false);
  }, []);

  // Função para voltar para lista de times
  const handleBackToTeams = useCallback(() => {
    setSelectedTeam(null);
    setFixtures([]);
    setSearchStep('teams');
    setShowResults(true);
  }, []);

  // Função para selecionar um time
  const handleTeamSelect = useCallback((team: Team) => {
    searchTeamFixtures(team);
  }, [searchTeamFixtures]);

  return (
    <div className="min-h-screen bg-black text-white">
      {/* Header */}
      <header className="border-b border-gray-800">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            {/* Logo */}
            <div className="text-2xl font-bold tracking-wider">
              APOSTA CERTA
            </div>

            {/* Navigation */}
            <nav className="hidden md:flex items-center space-x-8">
              <a href="#" className="hover:text-[#FF3002] transition-colors duration-300">Home</a>
              <a href="#" className="hover:text-[#FF3002] transition-colors duration-300">Nosso serviço</a>
              <a href="#" className="hover:text-[#FF3002] transition-colors duration-300">Sobre</a>
              <a href="#" className="hover:text-[#FF3002] transition-colors duration-300">Fale conosco</a>
            </nav>

            {/* Login Button */}
            <div className="flex gap-4">
              <button 
                onClick={testAPI}
                className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-semibold transition-all duration-300"
              >
                Teste API
              </button>
              <button className="bg-[#FF3002] hover:bg-[#E02702] text-white px-6 py-2 rounded-lg font-semibold transition-all duration-300 hover:shadow-lg hover:shadow-[#FF3002]/20 transform hover:scale-105">
                Login
              </button>
            </div>
          </div>
        </div>
      </header>

      {/* Search Bar */}
      <section className="py-12">
        <div className="container mx-auto px-4">
          <div className="max-w-2xl mx-auto relative">
            <div className="relative">
              <input
                type="text"
                placeholder="Digite pelo menos 3 letras do nome de um time (ex: Liverpool, Flamengo)..."
                value={searchTerm}
                onChange={handleSearchChange}
                onFocus={() => {
                  if (searchStep === 'teams' && teams.length > 0) {
                    setShowResults(true);
                  }
                }}
                className="w-full bg-[#1a1a1a] border border-gray-700 rounded-xl px-6 py-4 pl-14 text-white placeholder-gray-400 focus:outline-none focus:border-[#FF3002] transition-colors duration-300"
              />
              <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 text-[#FF3002] w-6 h-6" />
              {loading && (
                <div className="absolute right-4 top-1/2 transform -translate-y-1/2">
                  <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-[#FF3002]"></div>
                </div>
              )}
            </div>

            {/* Resultados da Pesquisa */}
            {showResults && (
              <>
                {/* Overlay para fechar ao clicar fora */}
                <div 
                  className="fixed inset-0 z-40" 
                  onClick={handleClickOutside}
                ></div>
                <div className="absolute top-full left-0 right-0 mt-2 bg-[#1a1a1a] border border-gray-700 rounded-xl shadow-xl z-50 max-h-[500px] overflow-y-auto">
                  {error ? (
                    <div className="p-4 text-center text-gray-400">
                      {error}
                    </div>
                  ) : searchStep === 'teams' && teams.length > 0 ? (
                    <div className="p-4">
                      <h3 className="text-lg font-semibold mb-4 text-[#FF3002]">
                        Times Encontrados ({teams.length})
                      </h3>
                      <div className="space-y-3">
                        {teams.map((teamData) => (
                          <div 
                            key={teamData.team.id}
                            onClick={() => handleTeamSelect(teamData.team)}
                            className="bg-[#2a2a2a] rounded-lg p-4 hover:bg-[#3a3a3a] transition-colors duration-300 cursor-pointer border border-transparent hover:border-[#FF3002]/30"
                          >
                            <div className="flex items-center justify-between">
                              <div className="flex items-center space-x-4">
                                <img 
                                  src={teamData.team.logo} 
                                  alt={teamData.team.name}
                                  className="w-10 h-10"
                                  onError={(e) => {
                                    e.currentTarget.style.display = 'none';
                                  }}
                                />
                                <div>
                                  <h4 className="font-semibold text-white">{teamData.team.name}</h4>
                                  <div className="flex items-center space-x-2 text-sm text-gray-400">
                                    <span>{teamData.team.country}</span>
                                    {teamData.team.founded && (
                                      <>
                                        <span>•</span>
                                        <span>Fundado em {teamData.team.founded}</span>
                                      </>
                                    )}
                                    {teamData.team.national && (
                                      <>
                                        <span>•</span>
                                        <span className="text-[#FF3002]">Seleção Nacional</span>
                                      </>
                                    )}
                                  </div>
                                </div>
                              </div>
                              <ChevronRight className="w-5 h-5 text-gray-400" />
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  ) : searchStep === 'fixtures' && selectedTeam && (
                    <div className="p-4">
                      <div className="flex items-center mb-4">
                        <button 
                          onClick={handleBackToTeams}
                          className="mr-3 p-1 hover:bg-[#3a3a3a] rounded-lg transition-colors"
                        >
                          <ArrowLeft className="w-5 h-5 text-[#FF3002]" />
                        </button>
                        <div className="flex items-center space-x-3">
                          <img 
                            src={selectedTeam.logo} 
                            alt={selectedTeam.name}
                            className="w-8 h-8"
                            onError={(e) => {
                              e.currentTarget.style.display = 'none';
                            }}
                          />
                          <h3 className="text-lg font-semibold text-[#FF3002]">
                            Próximos Jogos - {selectedTeam.name}
                          </h3>
                        </div>
                      </div>
                      
                      {fixtures.length > 0 ? (
                        <div className="space-y-3">
                          {fixtures.map((fixture) => (
                            <div 
                              key={fixture.fixture.id}
                              className="bg-[#2a2a2a] rounded-lg p-4 hover:bg-[#3a3a3a] transition-colors duration-300"
                            >
                              <div className="flex items-center justify-between mb-3">
                                <span className="text-sm text-gray-400 flex items-center">
                                  <Calendar className="w-4 h-4 mr-1" />
                                  {formatDate(fixture.fixture.date)}
                                </span>
                                <span className="text-xs bg-[#FF3002] text-white px-2 py-1 rounded-full">
                                  {fixture.league.name}
                                </span>
                              </div>
                              
                              <div className="flex items-center justify-between mb-3">
                                <div className="flex items-center space-x-3">
                                  <img 
                                    src={fixture.teams.home.logo} 
                                    alt={fixture.teams.home.name}
                                    className="w-6 h-6"
                                    onError={(e) => {
                                      e.currentTarget.style.display = 'none';
                                    }}
                                  />
                                  <span className="font-medium">{fixture.teams.home.name}</span>
                                </div>
                                
                                <div className="text-center px-4">
                                  <span className="text-gray-400">vs</span>
                                </div>
                                
                                <div className="flex items-center space-x-3">
                                  <span className="font-medium">{fixture.teams.away.name}</span>
                                  <img 
                                    src={fixture.teams.away.logo} 
                                    alt={fixture.teams.away.name}
                                    className="w-6 h-6"
                                    onError={(e) => {
                                      e.currentTarget.style.display = 'none';
                                    }}
                                  />
                                </div>
                              </div>

                              <div className="flex items-center justify-between text-sm text-gray-400">
                                {fixture.fixture.venue?.name && (
                                  <div className="flex items-center">
                                    <MapPin className="w-4 h-4 mr-1" />
                                    {fixture.fixture.venue.name}
                                    {fixture.fixture.venue.city && `, ${fixture.fixture.venue.city}`}
                                  </div>
                                )}
                                {fixture.fixture.referee && (
                                  <div className="flex items-center">
                                    <User className="w-4 h-4 mr-1" />
                                    {fixture.fixture.referee}
                                  </div>
                                )}
                              </div>
                            </div>
                          ))}
                        </div>
                      ) : (
                        <div className="text-center text-gray-400 py-8">
                          Nenhum jogo futuro encontrado para {selectedTeam.name}
                        </div>
                      )}
                    </div>
                  ) : searchTerm.trim() && searchStep === 'teams' ? (
                    <div className="p-4 text-center text-gray-400">
                      Nenhum time encontrado para "{searchTerm}"
                    </div>
                  ) : null}
                </div>
              </>
            )}
          </div>
        </div>
      </section>

      {/* Análise de Jogos */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-4xl font-bold text-center mb-12">Análise de Jogos</h2>
          
          <div className="grid md:grid-cols-3 gap-8">
            {/* Card 1 - Forma dos Times */}
            <div className="bg-[#1a1a1a] rounded-xl p-8 hover:bg-[#2a2a2a] transition-all duration-300 hover:shadow-xl hover:shadow-[#FF3002]/10 transform hover:-translate-y-1">
              <div className="flex items-center mb-4">
                <div className="bg-[#FF3002] p-3 rounded-lg">
                  <TrendingUp className="w-6 h-6 text-white" />
                </div>
                <h3 className="text-xl font-semibold ml-4">Forma dos Times</h3>
              </div>
              <p className="text-gray-300 mb-4">
                Análise detalhada do desempenho recente de cada equipe, incluindo vitórias, derrotas e empates.
              </p>
              <ul className="space-y-2 text-sm text-gray-400">
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Últimos 5 jogos
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Performance em casa/fora
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Gols marcados e sofridos
                </li>
              </ul>
            </div>

            {/* Card 2 - Confronto Direto */}
            <div className="bg-[#1a1a1a] rounded-xl p-8 hover:bg-[#2a2a2a] transition-all duration-300 hover:shadow-xl hover:shadow-[#FF3002]/10 transform hover:-translate-y-1">
              <div className="flex items-center mb-4">
                <div className="bg-[#FF3002] p-3 rounded-lg">
                  <Users className="w-6 h-6 text-white" />
                </div>
                <h3 className="text-xl font-semibold ml-4">Confronto Direto</h3>
              </div>
              <p className="text-gray-300 mb-4">
                Histórico completo de confrontos entre as equipes para identificar padrões e tendências.
              </p>
              <ul className="space-y-2 text-sm text-gray-400">
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Últimos 10 confrontos
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Vantagem mandante/visitante
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Média de gols nos confrontos
                </li>
              </ul>
            </div>

            {/* Card 3 - Sugestões de Aposta */}
            <div className="bg-[#1a1a1a] rounded-xl p-8 hover:bg-[#2a2a2a] transition-all duration-300 hover:shadow-xl hover:shadow-[#FF3002]/10 transform hover:-translate-y-1">
              <div className="flex items-center mb-4">
                <div className="bg-[#FF3002] p-3 rounded-lg">
                  <Target className="w-6 h-6 text-white" />
                </div>
                <h3 className="text-xl font-semibold ml-4">Sugestões de Aposta</h3>
              </div>
              <p className="text-gray-300 mb-4">
                Recomendações baseadas em análise estatística avançada e algoritmos preditivos.
              </p>
              <ul className="space-y-2 text-sm text-gray-400">
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Resultado final
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Over/Under gols
                </li>
                <li className="flex items-center">
                  <span className="w-2 h-2 bg-[#FF3002] rounded-full mr-3"></span>
                  Ambas marcam
                </li>
              </ul>
            </div>
          </div>
        </div>
      </section>

      {/* Resumo */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <div className="bg-[#1a1a1a] rounded-xl p-8 md:p-12">
            <h2 className="text-3xl font-bold mb-6">Resumo da Análise</h2>
            <div className="grid md:grid-cols-2 gap-8">
              <div>
                <h3 className="text-xl font-semibold mb-4 text-[#FF3002]">Dados Estatísticos</h3>
                <p className="text-gray-300 mb-4">
                  Nossa plataforma processa <strong className="text-white">mais de 10.000 dados</strong> por partida, 
                  incluindo estatísticas históricas, condições climáticas, lesões de jogadores e muito mais.
                </p>
                <p className="text-gray-300">
                  Com uma precisão de <strong className="text-[#FF3002]">78% nas previsões</strong>, oferecemos 
                  as melhores oportunidades de sucesso nas suas apostas.
                </p>
              </div>
              <div>
                <h3 className="text-xl font-semibold mb-4 text-[#FF3002]">Algoritmos Avançados</h3>
                <p className="text-gray-300 mb-4">
                  Utilizamos <strong className="text-white">inteligência artificial</strong> e machine learning 
                  para analisar padrões complexos que não são visíveis ao olho humano.
                </p>
                <p className="text-gray-300">
                  Atualizações em <strong className="text-[#FF3002]">tempo real</strong> garantem que você 
                  sempre tenha as informações mais recentes antes de fazer sua aposta.
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Sugestão de Aposta */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12">Sugestão em Destaque</h2>
          
          <div className="max-w-4xl mx-auto">
            <div className="bg-[#1a1a1a] rounded-xl p-8 hover:bg-[#2a2a2a] transition-all duration-300">
              <div className="flex flex-col md:flex-row items-start md:items-center gap-6">
                <div className="flex-shrink-0">
                  <div className="bg-[#FF3002] p-4 rounded-full">
                    <User className="w-8 h-8 text-white" />
                  </div>
                </div>
                
                <div className="flex-grow">
                  <div className="mb-4">
                    <h3 className="text-xl font-semibold mb-2">Flamengo vs Palmeiras</h3>
                    <p className="text-gray-300 mb-3">
                      Baseado na análise completa dos últimos confrontos e forma atual das equipes, 
                      nossa recomendação é uma aposta em <strong className="text-[#FF3002]">Over 2.5 gols</strong>.
                    </p>
                    <div className="flex flex-wrap gap-4 text-sm">
                      <span className="bg-gray-800 px-3 py-1 rounded-full">Confiança: 82%</span>
                      <span className="bg-gray-800 px-3 py-1 rounded-full">Odd: 1.75</span>
                      <span className="bg-gray-800 px-3 py-1 rounded-full">Retorno: R$ 175</span>
                    </div>
                  </div>
                </div>

                <div className="flex-shrink-0">
                  <button className="bg-[#FF3002] hover:bg-gradient-to-r hover:from-[#FF3002] hover:to-[#CC2602] text-white px-8 py-3 rounded-lg font-semibold transition-all duration-300 hover:shadow-lg hover:shadow-[#FF3002]/30 transform hover:scale-105 flex items-center group">
                    Selecionar Aposta
                    <ChevronRight className="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform duration-300" />
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="border-t border-gray-800 py-8">
        <div className="container mx-auto px-4">
          <div className="text-center text-gray-400">
            <p>&copy; 2025 Aposta Certa. Todos os direitos reservados.</p>
            <p className="mt-2 text-sm">Jogue com responsabilidade. +18 anos.</p>
          </div>
        </div>
      </footer>
    </div>
  );
}

export default App;